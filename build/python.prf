# profile to include and link Python
PYTHON_VERSION = 311

# Change this variable to your python version (2.6, 2.7, 3.3, ...)
isEmpty( PYTHON_VERSION ) {
  PYTHON_VERSION=$$(PYTHON_VERSION)
}
isEmpty( PYTHON_VERSION ) {
  win32:PYTHON_VERSION=27
  unix:PYTHON_VERSION=2.7
}

isEmpty( PYTHON_DIR ) {
  PYTHON_DIR=$$(PYTHON_DIR)
}
!isEmpty( PYTHON_DIR ) {
  PYTHON_DIR=$${PYTHON_DIR}/
}

message(Using Python version $${PYTHON_VERSION})

macx {
  # for macx you need to have the Python development kit installed as framework
  INCLUDEPATH += /System/Library/Frameworks/Python.framework/Headers
  LIBS += -F/System/Library/Frameworks -framework Python
} else:win32 {
  # for windows install a Python development kit or build Python yourself from the sources
  # Make sure that you set the environment variable PYTHON_PATH to point to your
  # python installation (or the python sources/header files when building from source).
  # Make sure that you set the environment variable PYTHON_LIB to point to
  # the directory where the python libs are located.
  #
  # When using the prebuild Python installer, this will be:
  # set PYTHON_PATH = c:\Python26
  # set PYTHON_LIB  = c:\Python26\libs
  #
  # When using the python sources, this will be something like:
  # set PYTHON_PATH = c:\yourDir\Python-2.6.1\
  # set PYTHON_LIB  = c:\yourDir\Python-2.6.1\PCbuild8\Win32

  # check if debug or release
  CONFIG(debug, debug|release) {
    DEBUG_EXT = _d
  } else {
    DEBUG_EXT = 
  }

  # For windows build:
  # 1. Install python-3.11.1-amd64 with debug /Include_debug=1/ (https://docs.python.org/3/using/windows.html).
  #    Debug Python version will be python311_d.dll, release python311.dll. Without python311_d.dll it is impossible to
  #    build debug version of PythonQt.
  # 2. Install pybind11 using pip ('pip install pybind11' in cmd). It is needed for eval.h file only. You can find
  #    this header by yourself, dont forget to add INCLUDEPATH.
  # 3. Set PYTHON_PATH (usually C:/Users/$${username}/AppData/Local/Programs/Python/Python311).
  # 4. Written above is applicable to other versions of python. Then change PYTHON_VERSION to actual in the beginning
  #    of this file.
  PYTHON_PATH = C:/Users/$$(USERNAME)/AppData/Local/Programs/Python/Python$${PYTHON_VERSION}
  win32:INCLUDEPATH += $${PYTHON_PATH}/include \
                       $${PYTHON_PATH}/include/cpython \
                       $${PYTHON_PATH}/Lib/site-packages/pybind11/include/pybind11

  win32:LIBS += $${PYTHON_PATH}/python$${PYTHON_VERSION}$${DEBUG_EXT}.dll

} else:unix {
  # on linux, python-config is used to autodetect Python.
  # make sure that you have installed a matching python-dev package.
  
  PYTHON_CONFIG = $${PYTHON_DIR}/bin/python$${PYTHON_VERSION}-config
  system($${PYTHON_CONFIG} --embed --libs) {
    unix:LIBS += $$system($${PYTHON_CONFIG} --embed --libs)
  } else: unix:LIBS += $$system($${PYTHON_CONFIG} --libs)  
  unix:QMAKE_CXXFLAGS += $$system($${PYTHON_CONFIG} --includes)
  PYTHON_LFLAGS = $$system($${PYTHON_CONFIG} --ldflags)
  unix:QMAKE_LFLAGS += $${PYTHON_LFLAGS}
  # add rpath
  PYTHON_LIBDIR = $$find(PYTHON_LFLAGS,-L.*)
  RPATH = -Wl,-rpath,
  PYTHON_RPATH = $$replace(PYTHON_LIBDIR,-L,$${RPATH})
  unix:QMAKE_LFLAGS += $${PYTHON_RPATH}
}
